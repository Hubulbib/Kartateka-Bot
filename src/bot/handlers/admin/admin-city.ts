import { Keyboard } from "grammy";
import { City } from "../../../entities/city";
import { AppContext } from "../../../interfaces";
import { AppDataSource } from "../../../services/database";

// –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≥–æ—Ä–æ–¥–∞
export async function handleAddCity(ctx: AppContext) {
  const cityRepo = AppDataSource.getRepository(City);

  const city = cityRepo.create({
    name: ctx.message.text,
  });

  await cityRepo.save(city);
  ctx.session.adminAction = undefined;

  const keyboard = new Keyboard().text("üîô –ù–∞–∑–∞–¥").resized();

  await ctx.reply(`‚úÖ –ì–æ—Ä–æ–¥ "${city.name}" —Å–æ–∑–¥–∞–Ω`, {
    reply_markup: keyboard,
  });
}

// –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≥–æ—Ä–æ–¥–∞
export async function handleEditCity(ctx: AppContext) {
  if (!ctx.session.adminEditingCityId) return;

  const cityRepo = AppDataSource.getRepository(City);
  const city = await cityRepo.findOneBy({
    id: ctx.session.adminEditingCityId,
  });

  if (city) {
    const oldName = city.name;
    city.name = ctx.message.text;
    await cityRepo.save(city);

    ctx.session.adminAction = undefined;
    ctx.session.adminEditingCityId = undefined;

    const keyboard = new Keyboard().text("üîô –ù–∞–∑–∞–¥").resized();

    await ctx.reply(`‚úÖ –ì–æ—Ä–æ–¥ –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω:\n"${oldName}" ‚Üí "${city.name}"`, {
      reply_markup: keyboard,
    });
  }
}
